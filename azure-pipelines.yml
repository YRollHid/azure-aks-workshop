# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
- group: 'YRollHid.azure-aks-workshop'

stages:
- stage: 'DeployAKS'
  displayName: 'Deploy AKS'
  jobs:
  - job: 'DeployAKS'
    displayName: 'Deploy AKS'
    steps:
    - task: AzureCLI@2
      displayName: 'Deploy AKS'
      inputs:
        azureSubscription: 'AzureAksWorkShopSc'
        scriptType: 'bash'
        scriptLocation: 'scriptPath'
        scriptPath: 'azure_deployment/azure-aks-deploy.sh'
        arguments: '$(sshPubKey) $(aksClusterName)'
        workingDirectory: '$(System.DefaultWorkingDirectory)'

- stage: 'DeployACR'
  displayName: 'Deploy ACR & Build images'
  jobs:
  - job: 'DeployACR'
    displayName: 'Deploy ACR & Build images'
    steps:
    - task: AzureCLI@2
      displayName: 'Deploy ACR & Build images'
      inputs:
        azureSubscription: 'AzureAksWorkShopSc'
        scriptType: 'bash'
        scriptLocation: 'scriptPath'
        scriptPath: 'azure_deployment/azure-acr-deploy.sh'
        arguments: '$(pathRatingsAPI) $(pathRatingsWeb) $(aksClusterName)'
        workingDirectory: '$(System.DefaultWorkingDirectory)'

- stage: 'DeployContainers'
  displayName: 'Deploy Containers'
  jobs:
    - job: 'DeployMongoDB'
      displayName: 'Deploy MongoDB'
      steps:
        - task: HelmDeploy@0
          inputs:
            connectionType: 'Azure Resource Manager'
            azureSubscription: 'AzureAksWorkShopSc'
            azureResourceGroup: 'aksworkshop'
            kubernetesCluster: 'aksworkshop-28102021'
            namespace: 'ratingsapp'
            command: 'install'
            chartType: 'Name'
            chartName: 'bitnami/mongodb'
            releaseName: 'ratings'
            overrideValues: 'auth.username=$(mongodbuser),auth.password=$(mongodbpass),auth.database=ratingsdb'